<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3WAAAN1gGQb3mcAAAAB3RJ
        TUUH5gUQCTci3oZQjwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAZiSURBVHhe
        5ZttiFRVGMfHtzUtLbMkRUqMSkGjDKQXo0QLEnNfXdfVLHMNsw/SGxRB9iUMjD4YRUHahzCjIFQEKzRq
        DZ11X9TVNDUzFzLLJMt3U0+//7nn3rk7OzO7C+sd5+4DPy7MzL3c/3Oe5zznPPdO4koxs7UsYerKikxd
        6XumuXqDaVnY3+yf576NuZmGioT5YWrCJEuqTFPlKbPv6bXm1wVF5uca94sYm9k1W8LFOKJgv9nzpEH4
        WxLfPRxQVyqG4ICvzI6ZhrC/hPA53UO88r6+vAjxb5MGl8zeuRr9f3DCvbF3AMITpnaKQn8OnDQ/PiHx
        Yj8Mj7UDzPYqL+/rSsebLcUHzbYZCn3fAd9Av3g7wMv7oThhI2lgzE9PeeI9J7wr8bF1gMv7vohfBsbs
        nOWPvM8CiRexM5v3GyYr/GsI/dOmcbqh5ofFn4KJ8RTfON3P+/s5tnA0ruaH8/8QjIynA7y8H474Wkbf
        uJrvC/fZBAPAnRUTs3m/tawf4j+w4hsqjKv56SyHHuDOjIHZvF/EMVnyLJwBE6r56bwI8ZkA7SbHy/uH
        OP5mR791zQ9zDqaAOzsG5vL+FsRvtuLb1vwwv8NocGcXuLm874/45TbsM9f8MA0wCNwVCths3h94pgei
        F8E5O/pta346q6AXuKsUqJmmygSCFfqTEX/Eis9c89N5HTo1Abrfq2r0gf7QU5/lzcyB+X7ej0R8vRUv
        Mtf8MBegAtyVUqbPQCKvghvgNpgAM+Al0N5hNdRCDeSvjFrxW8uuQfwn4InPXvPDHIN7QLvAYTAWHoG5
        sBhWgHaJzXAYTsJFSL/Od3A1uDuK0Gze75jZE+Evw3krPnfND3MC1oFGcR8chbOg7lCm32ej02nUJWbX
        +V7eP4boo0HoZ6/5l4NGiL6RYpqr/cXO7Ry3BeJz1/yuRtFi+4giUnN5PxDxn9mQ90M/d83vatZC9Jso
        u9hpquyF4NfgQjD67df8rkQTqO0hiMjMrvM3T1METEP8sUB8x2p+V7IMeoO7swjMLna8vB/NcWcgXrRf
        83PTuXPVQR4F7s4iMpf3gxD/JXg5L/Gq+e2FvgT66LdaIwhNmL74jjlB64DnIeLQV943Tu+N6DfgohXu
        O2B7VUqM0mD3HG8doAmxudr7XqWxqdJzVn25Vy2UNkKft79o8lH36EZwdxaB2cWOl/fliD4eiPcdIBG+
        IP9z/7uO0rHqoZVgGUQ3+qGm5liOe+zNhkV2VqjIdL7mkMyiw6yEaB+e2ND3nuN9GtxsNloLuwhqhR2D
        Q7ADvoVV8D2kxOuotMks2kd7gfGQh9z3Ghzrg5tOlvwHJ+AI7IUkrIMVsATUD6giaibBXTCCawzGkf3M
        yrGKqMWQcoDmhPbXD29C9NteW/e99f6d8AI3XcPxcbgPRiFsKAzkd0XkcQ9C2Z3Z1uy1mio1kX4ejLyO
        miRzVwDtBkeAu1KBmoumwQhP7R3khNw7x/Og/X706/2uNiJGjEH0n4EDVD1yl8D1cC24qxSwIVwOKObo
        9Q1E7q3z3/AoxGD0tYzWWiJZ8qoNez/8d83OJNznQ1Dfz12lgM1OgDtnqXOUapvlDv+DMAbcFQrc3AR4
        HeLrgvDXEjhz+Ksl9goUfuj75ibAO3DA4cAB2Ze/SbgJ3NkxMITLAeodnrXitW/wW2etOQ1VEKPR18tR
        WkwlS7SQ8kZf3aPM4f8F5KfFfbnMToBmqR6ZfRQ4QNvktuL/gAcgPqMvcxPgAMRvCsLfb5+1Zink9zHX
        5TA3AeqxWYt1QOYO0m64FdxZMTKEywGTOJ62Dmi799czwucgXqEvY6b3J8CFVrzmgLbhvxGuB3dWjMx2
        lL6eKAe8nyX8/4WpEi9iZ7afWF+uhsrGLOH/MfQFd0bMzE2AN+OAX2z4t259tcDdEi9iaYiWAyYw+icy
        tL70WDte7wemm5sA59nwb936ys9j7SjNToDenyPeseGfan3l77F2lOYmQL0ivz5t778G4vducLq5CXAY
        4b831Pr6Cx6W+O7igPFEwPFQ6yv6x9r5MoSL2YS//88wvQgV/WPtfBgh7/8rdIlrfeXnsXa+zE6ADRV9
        cMAa1/qqxQnRPtbOp9keQLJkCMddbIjOILy024y+zE6AW4rHEf7HWf2tNAfm65VX9203MFcBHjTN1Xqf
        5wprcyUS/wPGx6yb0eXZdgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5wprcyUS/wPGx6yb0eXZdgAAAABJRU5ErkJggg==
</value>
  </data>
</root>